@{
    var rootSiteUrl = Url.Content("~/").TrimEnd('/') + "/"; // use it with caution, it may be removed in the future
    var isSidebarCollapsed = (ViewBag.IsCollapsed != null) && (bool)ViewBag.IsCollapsed;
}
@*@System.Web.Optimization.Styles.Render("~/content/css/base")
    @System.Web.Optimization.Styles.Render("~/content/css/custom")
    @System.Web.Optimization.Styles.Render("~/content/scripts/plugin")*@

@*@System.Web.Optimization.Scripts.Render("~/bundles/scripts/base")
    @System.Web.Optimization.Scripts.Render("~/bundles/scripts/custom")
    @System.Web.Optimization.Scripts.Render("~/bundles/scripts/plugin")*@
<form data-bind="submit:save" class="form-horizontal" id="formItem">

<div style="display:inline-block;margin:24px 0;padding-left:10px;">共<span data-bind="text:PeopleList().length"></span>条记录</div>

<div id="model1">
    <h3>
        <a href="javascript:void(0)" data-bind="click:add">添加实体</a>
        <button type="button" data-bind="click:sortItem">排序</button>
        <button type="button" data-bind="click:reverseItem">反序</button>
    </h3>
    <table>
        <thead>
            <tr>
                <th>编号</th>
                <th>姓名</th>
                <th></th>
            </tr>
        </thead>
        <tbody data-bind="template:{name:'list',foreach: PeopleList}"></tbody>
        @*<tbody data-bind="foreach: PeopleList">
                <tr>
                    <td><span data-bind="text:ID"></span></td>
                    <td>
                        <span data-bind="text:Name"></span>
                    </td>
                    <td>
                        <a href="javascript:void(0)" data-bind="click:$parent.remove">删除</a>
                        <a href="javascript:void(0)" data-bind="click:$parent.edit">编辑</a>
                    </td>
                </tr>
            </tbody>*@
    </table>
    <script type="text/html" id="list">
        <tr>
            <td><span data-bind="text:ID"></span></td>
            <td>
                <span data-bind="text:Name"></span>
            </td>
            <td>
                <a href="javascript:void(0)" data-bind="click:$parent.remove">删除</a>
                <a href="javascript:void(0)" data-bind="click:$parent.edit">编辑</a>
            </td>
        </tr>
    </script>
    <fieldset data-bind="with:selectItem,visible:editing">
        <legend>正在<span data-bind="if:ID==0">新建</span><span data-bind="if:ID>0">编辑</span></legend>
        姓名：
        <input type="text" data-bind="value:Name" />
        <input type="button" data-bind="click:$parent.save" value="保存" />
        <input type="button" data-bind="click:$parent.cancle" value="取消" />
    </fieldset>

    <div id="model2" data-bind="with:data1">
        <input type="text" data-bind="value:serverTime" />
        <input type="text" data-bind="value:numUsers,valueUpdate: 'afterkeydown'" />
        <input type="text" data-bind="value:realUsers" />
    </div>
</div>
<button class="btn btn-primary" data-bind="click: utils.doValidate('#formItem', save, $data)">保存</button>
</form>

<script type="text/javascript">
    window.GMK = window.GMK || {};
    window.title = '@ViewBag.Title';
    window.rootSiteUrl = '@rootSiteUrl';
    var People = function () {
        this.ID = ko.observable(0);
        this.Name = ko.observable("");
        this.IsCreated = ko.observable(false);
    }

    function normalize(data, properties, keep) {
        $.each(properties, function (i, item) {
            if (data[item] != undefined) data[item.toTitleCase()] = data[item];
            if (keep !== true) delete data[item];
        });
    }
    function normalizeMessage(data) {
        normalize(data, ['Status', 'Message', 'ReturnStatus'], true);
    }
    function normalizeData(data) {
        normalize(data, ['Data'], true);
    }

</script>
<script src="~/Scripts/jquery-2.1.4.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/utility.js"></script>
<script src="~/Scripts/knockout-3.4.0.debug.js"></script>
<script src="~/Scripts/knockout.mapping-latest.debug.js"></script>

<script type="text/javascript">
    $(function () {
        //处理json数据 加"
        //if (!String.prototype.toTitleCase) {
        //    String.prototype.toTitleCase = function () {
        //        var formatted = this;
        //        if (!!!formatted) return formatted;
        //        var i = 0, temp = [];
        //        while (formatted[i] >= 'A' && formatted[i] <= 'Z') {
        //            temp.push(formatted[i].toLowerCase());
        //            i++;
        //        }
        //        if (i > 1) {
        //            temp.pop();
        //            i--;
        //        }
        //        formatted = temp.join('') + formatted.substr(i);
        //        return formatted;
        //    };
        //}

        var ListViewModel = function (routes) {
            var self = this;
            self.PeopleList = ko.observableArray();
            function fill(data) {
                console.log(data.data);
                self.PeopleList(data.data);
                //$.each(self.list(), function (i, item) {
                //});
            }

            self.data1 = {
                serverTime: ko.observable('2010-01-07'),
                numUsers: ko.observable(3),
                realUsers: ko.observable(3),
            }
            self.data1.realUsers = ko.computed(function () {
                return self.data1.numUsers() ? self.data1.numUsers() * 2 : 0;
            });

            self.remove = function (o) {
                self.PeopleList.remove(o);
                //self.editing(false);
            };

            self.selectItem = ko.observable();
            //self.listLength = ko.observable();
            self.editing = ko.observable(false);

            self.add = function (o) {
                self.editing(true);
                self.selectItem(new People());
                //self.selectItem({});
            }
            self.edit = function (o) {
                self.editing(true);
                self.selectItem(o);
            }
            self.selectItem.subscribe(function (o) {
                o.ID > 0 ? alert("要编辑记录ID是" + o.ID) : alert("要创建新记录");
            });
            self.save = function (o) {
                if (self.editing() && o.ID > 0) {
                    //var old = self.selectItem();
                    //console.log(old);
                    //self.PeopleList.remove(old);
                    //self.PeopleList.push(o);
                }
                else {
                    //console.log(self.listLength());
                    // o.ID(self.listLength() + 1);
                    // self.PeopleList.push(o);
                    //  o.IsCreated(true);
                    self.selectItem().IsCreated(true);
                }
                $.ajax({
                    url: routes.SaveUrl,
                    type: 'POST',
                    data: ko.toJSON(o),
                    //utils.serialize('#sapInfoManagementForm .gmk-data-field')
                    //utils.deserialize('#sapInfoManagementForm .gmk-data-field', data.Data);

                    //var plainItem = ko.mapping.toJS(self.item);
                    //dataType:'json',
                    contentType: "application/json",
                    success: function (data) {

                        //console.log(utils.serialize('#model1'));
                        // console.log(utils.deserialize('#model1'));

                        //window.URL = rootSiteUrl+'/Home/Detail';
                        $("#formItem").load('@Url.Action("Detail", "Home")');
                        // self.editing(false);
                        // self.sortItem();
                    }
                });
                //alert((o.ID > 0 ? "修改数据" : "新建数据") + o.Name());
            }
            self.cancle = function () {
                self.editing(false);
            }
            self.sortItem = function () {
                //顺序排列
                self.PeopleList.sort(
                    function (left, right) {
                        return left.ID == right.ID ? 0 : (left.ID < right.ID ? -1 : 1);
                    });
            }
            self.reverseItem = function () {
                self.PeopleList.reverse();
            }
            //计算数组长度
            self.listLength = ko.computed({
                read: function () {
                    return self.PeopleList().length;
                },
                write: function (value) {
                    //
                },
                owner: this
            });

            self.initialize = function () {
                $.getJSON(routes.listUrl, function (data) {
                    normalizeData(data);
                    fill(data);
                });

                //$.ajax({
                //    url: routes.listUrl,
                //    type: 'GET',
                //    data: {},
                //    traditional: true,
                //    success: function (data) {
                //        console.log(data.Data);

                //        normalizeData(data);
                //        //console.log(ko.toJS(data.Data));

                //        //console.log(JSON.stringify(data.Data));
                //        //console.log(ko.toJSON(data.Data));

                //        //console.log(ko.toString(data.Data));

                //        //console.log(ko.mapping.fromJS(data.Data,self.list));
                //        //console.log(ko.mapping.fromJSON(data));
                //        fill(data);
                //        //ko.applyBindings(modeldemo, document.getElementById("model1"));
                //    }
                //});
            };

        };

        var viewModel = new ListViewModel({
            listUrl: '@(Url.Action("GetPepopleList"))',
            SaveUrl: '@(Url.Action("Save"))'
        });
        viewModel.initialize();
        //ko.applyBindings(viewModel, document.getElementById("model1"));
        ko.applyBindings(viewModel);

    });

</script>

